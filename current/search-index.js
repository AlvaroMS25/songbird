var searchIndex = JSON.parse('{\
"songbird":{"doc":"project logo","t":"DNNDDECNNNNNNNCECNNNNNDNNNNNENNLLLLLLLLMLLLLLLACLMLLLLMLLLLALMLMMLLAAFLLLLLLLLLLMLLMLALLALLLLLLLLLLALLLLLLCLLCLMLLLALLLMLALLLLLLMALLLLLLLLLLLLLLCLLMLLLLFRRRRRRRRRRRRRRRRRRNENDENENDNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLNEGNNNNNNNNNNNNNNNEGNNNNNNNEGNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNENNNNNNNNEEDIDNNNNNNNNNNNNNEENNKLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDDEENNNNDNDNDNMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDCCENDDDNCCMLLLLLLLLLLAMMFLLLLLLAMMFLLMLLAFFLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLMMLLLLLLAMAMLLLLMMMLMMLLLMLLLLLLLLLLLLLLLLLALLLLLFFMNDEDDNFLLLLLLLLLLLLLLFMFLLLLLLLLLLLLLLLLLLMMMLLLLLMMFLMMLLLLLLLLLLLLLLLLLLLLLLLEENNNNDNNMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNEENNNNNNNNNGNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNINNENLLKLLLLLLLLLKLLLLLLLLIDLLKLLLLLKLLLLLLLLLLFFFFFDDLLLLLLLLLLLLLLLLLLLLLLLLIDLLLFLLFFKKKFLLLLNNINNDDEENNNNILLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLKLLLLLNNNNNNNNENNNNNEDNNNNNDEEDDGDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLL","n":["Call","ClientDisconnect","ClientDisconnect","Config","ConnectionInfo","CoreEvent","Driver","DriverConnect","DriverConnect","DriverDisconnect","DriverDisconnect","DriverReconnect","DriverReconnect","End","Event","EventContext","EventHandler","Loop","Pause","Play","RtcpPacket","RtcpPacket","Songbird","SpeakingStateUpdate","SpeakingStateUpdate","SpeakingUpdate","SpeakingUpdate","Track","TrackEvent","VoicePacket","VoicePacket","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_id","clone","clone","clone","clone_into","clone_into","clone_into","constants","create_player","crypto_mode","crypto_mode","current_channel","current_connection","deafen","decode_mode","decode_mode","default","deref","deref_mut","deregister_shard","driver","driver_retry","driver_retry","driver_timeout","driver_timeout","endpoint","eq","equivalent","error","events","ffmpeg","fmt","fmt","fmt","fmt","from","from","from","from","from_config","gateway_timeout","gateway_timeout","get","get_or_insert","guild_id","hash","id","initialise","initialise_client_data","input","into","into","into","into","into_sample","into_sample","into_sample","into_sample","is_deaf","is_mute","join","join","join","join_gateway","join_gateway","leave","leave","model","mute","new","packet","preallocated_tracks","preallocated_tracks","process","register_shard","remove","serenity","serenity","serenity_from_config","server_update","session_id","set_config","shards","standalone","standalone_from_config","state_update","to_owned","to_owned","to_owned","token","tracks","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twilight","twilight_from_config","type_id","type_id","type_id","type_id","typemap","update_server","update_state","user_id","vzip","vzip","vzip","vzip","ytdl","AUDIO_FRAME_RATE","CHILD_BUFFER_LEN","DEFAULT_BITRATE","FRAME_LEN_MS","MONO_FRAME_BYTE_SIZE","MONO_FRAME_SIZE","RTP_PROFILE_TYPE","RTP_VERSION","SAMPLE_RATE","SAMPLE_RATE_RAW","SILENT_FRAME","STEREO_FRAME_BYTE_SIZE","STEREO_FRAME_SIZE","TIMESTEP_LENGTH","UDP_KEEPALIVE_GAP","UDP_KEEPALIVE_GAP_MS","VOICE_GATEWAY_VERSION","VOICE_PACKET_MAX","Auto","Bitrate","BitsPerSecond","Connect","CryptoMode","Decode","DecodeMode","Decrypt","Driver","Lite","Max","Normal","Pass","Suffix","add_global_event","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","config","connect","default","drop","encrypt_in_place","enqueue","enqueue_source","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","into","into","into","into","into","into_future","into_sample","into_sample","into_sample","into_sample","into_sample","is_mute","leave","mute","new","nonce_size","opus","payload_overhead","payload_prefix_len","payload_suffix_len","play","play_only","play_only_source","play_source","poll","queue","remove_all_global_events","retry","set_bitrate","set_config","should_decrypt","stop","to_owned","to_owned","to_owned","to_owned","to_request_str","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","Backoff","Every","ExponentialBackoff","Retry","Strategy","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","eq","eq","eq","fmt","fmt","fmt","from","from","from","into","into","into","into_sample","into_sample","into_sample","jitter","max","min","retry_limit","strategy","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AttemptDiscarded","ConnectionError","ConnectionResult","Crypto","CryptoModeInvalid","CryptoModeUnavailable","Driver","Dropped","EndpointUrl","ExpectedHandshake","Finished","IllegalChannel","IllegalDiscoveryResponse","IllegalGuild","IllegalIp","InterconnectFailure","InvalidTrackEvent","Io","JoinError","JoinResult","Json","NoCall","NoSender","SeekUnsupported","Serenity","TimedOut","TimedOut","TrackError","TrackResult","TwilightCluster","TwilightShard","Ws","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into_sample","into_sample","into_sample","provide","provide","provide","should_leave_server","should_reconnect_driver","source","source","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Cancel","ClientDisconnect","ClientDisconnect","Core","Core","CoreEvent","Delayed","DriverConnect","DriverConnect","DriverDisconnect","DriverDisconnect","DriverReconnect","DriverReconnect","End","Event","EventContext","EventData","EventHandler","EventStore","Loop","Pause","Periodic","Play","RtcpPacket","RtcpPacket","SpeakingStateUpdate","SpeakingStateUpdate","SpeakingUpdate","SpeakingUpdate","Track","Track","Track","TrackEvent","UntimedEvent","VoicePacket","VoicePacket","act","add_event","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","compute_activation","context_data","default","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","into","into","into","into","into","into","into","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","new","new","new_local","partial_cmp","to_core_event","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AttemptDiscarded","Connect","ConnectData","DisconnectData","DisconnectKind","DisconnectReason","Internal","Io","ProtocolViolation","Reconnect","RtcpData","Runtime","SpeakingUpdateData","TimedOut","VoiceData","WsClosed","audio","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_id","channel_id","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","guild_id","guild_id","hash","hash","hash","into","into","into","into","into","into","into","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","kind","packet","packet","payload_end_pad","payload_end_pad","payload_offset","payload_offset","reason","server","session_id","session_id","speaking","ssrc","ssrc","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ChannelId","GuildId","UserId","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","into","into","into","into_sample","into_sample","into_sample","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ChildContainer","Codec","CodecType","Container","Dca","Frame","Input","Metadata","Raw","Reader","Restartable","artist","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cached","channel","channels","children_to_reader","clone","clone","clone","clone_into","clone_into","clone_into","codec","container","date","dca","default","drop","duration","eq","equivalent","error","ffmpeg","ffmpeg_optioned","float_pcm","fmt","fmt","fmt","fmt","fmt","frame_len","from","from","from","from","from","from","from","from_ffprobe_json","from_ytdl_output","get_type","header_len","input_start","into","into","into","into","into","into_sample","into_sample","into_sample","into_sample","into_sample","is_seekable","is_stereo","kind","metadata","mix","new","new","next_frame_length","read","read","reader","reader","restartable","sample_rate","seek","seek_time","skip","skip","source_url","start_time","stereo","take","thumbnail","title","to_owned","to_owned","to_owned","track","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_seek_trivial","type_id","type_id","type_id","type_id","type_id","utils","vzip","vzip","vzip","vzip","vzip","ytdl","ytdl_search","first_frame","Bytes","Compressed","LengthHint","Memory","OpusCompressor","Time","apply_length_hint","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","compressed_cost_per_sec","container","default_config","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into_sample","into_sample","into_sample","into_sample","kind","metadata","metadata","min_bytes_required","new","new","new_handle","new_handle","raw","raw","raw_cost_per_sec","state","stereo","stereo","to_owned","to_owned","to_owned","transform_read","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","with_config","with_config","with_encoder","Codec","CodecType","FloatPcm","FloatPcm","Opus","Opus","OpusDecoderState","Pcm","Pcm","allow_passthrough","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","decoder","fmt","fmt","fmt","from","from","from","from","from_decoder","into","into","into","into_sample","into_sample","into_sample","new","sample_len","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Dca","DcaError","Error","InvalidHeader","InvalidMetadata","InvalidSize","Io","IoError","Json","Metadata","Opus","Opus","Result","Stdout","Streamcatcher","Streams","YouTubeDlProcessing","YouTubeDlRun","YouTubeDlUrl","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into_sample","into_sample","provide","provide","source","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","parsed_text","Compressed","Extension","MediaSource","Memory","Pipe","Reader","Restartable","borrow","borrow_mut","byte_len","fmt","from","from","from","from","from_file","from_memory","into","into_sample","is_seekable","is_seekable","read","seek","skip","try_from","try_into","type_id","vzip","Restart","Restartable","borrow","borrow_mut","call_restart","ffmpeg","fmt","from","into","into_sample","lazy_init","new","read","seek","skip","try_from","try_into","type_id","vzip","ytdl","ytdl_search","byte_count_to_timestamp","decoder","sample_count_to_timestamp","timestamp_to_byte_count","timestamp_to_sample_count","Join","JoinGateway","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","into_future","into_future","into_sample","into_sample","poll","poll","try_from","try_from","try_into","try_into","try_poll","try_poll","type_id","type_id","vzip","vzip","SerenityInit","SongbirdKey","borrow","borrow_mut","from","get","into","into_sample","register","register_from_config","register_songbird","register_songbird_from_config","register_songbird_with","register_with","try_from","try_into","type_id","vzip","Generic","Generic","GenericSharder","Serenity","Serenity","SerenityShardHandle","SerenitySharder","Shard","Sharder","TwilightCluster","TwilightCluster","TwilightShard","TwilightShard","VoiceUpdate","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","default","fmt","fmt","fmt","fmt","from","from","from","from","get_shard","get_shard","into","into","into","into","into_sample","into_sample","into_sample","into_sample","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_voice_state","update_voice_state","vzip","vzip","vzip","vzip","AddEvent","Do","End","Finished","Finite","Infinite","InvalidTrackEvent","Loop","LoopState","MakePlayable","Pause","Pause","Play","Play","PlayMode","Queued","Request","Seek","SeekUnsupported","Stop","Stop","Track","TrackCommand","TrackError","TrackHandle","TrackQueue","TrackResult","TrackState","Volume","action","add","add_event","add_source","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","create_player","create_player_with_uuid","current","current_queue","default","default","default","default","dequeue","deref","disable_loop","enable_loop","eq","eq","eq","equivalent","equivalent","events","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_info","handle","handle","into","into","into","into","into","into","into","into","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","into_sample","is_done","is_empty","is_seekable","len","loop_for","loops","loops","make_playable","make_playable","metadata","modify_queue","new","new","new_raw","pause","pause","pause","play","play","play_time","play_time","playing","playing","position","position","resume","seek_time","seek_time","send","set_loops","set_volume","set_volume","skip","state","stop","stop","stop","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typemap","uuid","uuid","volume","volume","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["songbird","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird::constants","","","","","","","","","","","","","","","","","","songbird::driver","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird::driver::retry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird::events","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird::events::context_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird::id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird::input","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird::input::Container","songbird::input::cached","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird::input::codec","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird::input::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird::input::error::Error","","songbird::input::reader","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird::input::restartable","","","","","","","","","","","","","","","","","","","","","songbird::input::utils","","","","","songbird::join","","","","","","","","","","","","","","","","","","","","","","","","","","songbird::serenity","","","","","","","","","","","","","","","","","","songbird::shards","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","songbird::tracks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The Call handler is responsible for a single voice …","Fired whenever a client disconnects.","Fires whenever a user disconnects from the same stream as …","Configuration for drivers and calls.","Parameters and information needed to start communicating …","Voice core events occur on receipt of voice packets and …","","Fires when this driver successfully connects to a voice …","Fires when this driver successfully connects to a voice …","Fires when this driver fails to connect to, or drops from, …","Fires when this driver fails to connect to, or drops from, …","Fires when this driver successfully reconnects after a …","Fires when this driver successfully reconnects after a …","The attached track has ended.","","Information about which tracks or data fired an event.","","The attached track has looped.","The attached track has been paused.","The attached track has resumed playing.","Telemetry/statistics packet, received from another stream.","Fires on receipt of an RTCP packet, containing various …","A shard-aware struct responsible for managing <code>Call</code>s.","Speaking state update, typically describing how another …","Speaking state update, typically describing how another …","Speaking state transition, describing whether a given …","Fires when a source starts speaking, or stops speaking (…","Track event context, passed to events created via …","Track events correspond to certain actions or changes of …","Opus audio packet, received from another stream.","Fires on receipt of a voice packet from another stream in …","","","","","","","","","ID of the voice channel being joined, if it is known.","","","","","","","Constants affecting driver function and API handling.","","Sets this <code>Config</code>’s chosen cryptographic tagging scheme.","Selected tagging mode for voice packet encryption.","Returns <code>id</code> of the channel, if connected or connecting to …","Returns the current voice connection details for this Call,","Sets whether the current connection is to be deafened.","Sets this <code>Config</code>’s received packet decryption/decoding …","Configures whether decoding and decryption occur for all …","","","","","Runner for a voice connection.","Sets this <code>Config</code>’s voice connection retry configuration.","Connection retry logic for the <code>Driver</code>.","Sets this <code>Config</code>’s timeout for establishing a voice …","Configures the maximum amount of time to wait for an …","URL of the voice websocket gateway server assigned to this …","","","Driver and gateway error handling.","Events relating to tracks, timing, and other callers.","Opens an audio file through <code>ffmpeg</code> and creates an audio …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new Call, configuring the driver as specified.","Sets this <code>Config</code>’s timeout for joining a voice channel.","Configures the amount of time to wait for Discord to reply …","Retrieves a <code>Call</code> for the given guild, if one already …","Retrieves a <code>Call</code> for the given guild, creating a new one if","ID of the target voice channel’s parent guild.","","Newtypes around Discord IDs for library …","","Set the bot’s user, and the number of shards in use.","Raw audio input data streams and sources.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns whether the current connection is self-deafened in …","Returns whether the current connection is self-muted in …","Future types for gateway interactions.","Connect or switch to the given voice channel by its Id.","Connects to a target by retrieving its relevant <code>Call</code> and …","Join the selected voice channel, <em>without</em> running/starting …","Partially connects to a target by retrieving its relevant …","Leaves the current voice channel, disconnecting from it.","Retrieves the handler for the given target and leaves the …","","Sets whether the current connection is to be muted.","Creates a new Call, which will send out WebSocket messages …","","Sets this <code>Config</code>’s number of tracks to preallocate.","Number of concurrently active tracks to allocate memory …","Handle events received on the cluster.","","Retrieves the <code>Call</code> for the given target and leaves the …","Compatability and convenience methods for working with …","Create a new Songbird instance for serenity.","Create a new Songbird instance for serenity, using the …","","Unique string describing this session for …","Sets a shared configuration for all drivers created from …","Handlers for sending packets over sharded connections.","Creates a new, standalone Call which is not connected via …","Creates a new standalone Call from the given configuration …","","","","","Ephemeral secret used to validate the above session.","Live, controllable audio instances.","","","","","","","","","Create a new Songbird instance for twilight.","Create a new Songbird instance for twilight.","","","","","","Updates the voice server data.","Updates the internal voice state of the current user.","UserID of this bot.","","","","","Creates a streamed audio source with <code>youtube-dl</code> and <code>ffmpeg</code>.","Number of audio frames/packets to be sent per second.","Maximum number of audio frames/packets to be sent per …","Default bitrate for audio.","Length (in milliseconds) of any audio frame.","Number of bytes in one complete frame of raw <code>f32</code>-encoded …","Number of samples in one complete frame of audio per …","Profile type used by Discord’s Opus audio traffic.","The one (and only) RTP version.","Sample rate of audio to be sent to Discord.","Sample rate of audio to be sent to Discord.","Opus silent frame, used to signal speech start and end …","Number of bytes in one complete frame of raw <code>f32</code>-encoded …","Number of individual samples in one complete frame of …","Length of time between any two audio frames.","Type-converted delay between sends of UDP keepalive frames.","Delay between sends of UDP keepalive frames.","The voice gateway version used by the library.","Maximum packet size for a voice packet.","Default bitrate decided by the encoder (not recommended).","Opus encoder bitrate settings.","Explicit bitrate choice (in bits/second).","Future for a call to <code>Driver::connect</code>.","Variants of the XSalsa20Poly1305 encryption scheme.","Decrypts and decodes each received packet, correctly …","Decode behaviour for received RTP packets within the …","Decrypts the body of each received packet.","The control object for a Discord voice connection, …","An additional random 4B suffix is used as the source of …","Maximum bitrate allowed (up to maximum number of bytes for …","The RTP header is used as the source of nonce bytes for …","Packets received from Discord are handed over to events …","An additional random 24B suffix is used as the source of …","Attach a global event handler to an audio context. Global …","","","","","","","","","","","","","","","","","","","Returns a view of this driver’s configuration.","Connects to a voice channel using the specified server.","","Leaves the current connected voice channel, if connected …","Encrypts a Discord RT(C)P packet using the given key.","Adds an existing <code>Track</code> to this driver’s built-in queue.","Adds an audio <code>Input</code> to this driver’s built-in queue.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns whether the driver is muted (i.e., processes audio …","Leaves the current voice channel, disconnecting from it.","Sets whether the current connection is to be muted.","Creates a new voice driver.","Returns the number of bytes each nonce is stored as within …","Opus encoder bitrate settings.","Calculates the number of additional bytes required compared","Returns the number of bytes occupied by the encryption …","Returns the number of bytes occupied by the encryption …","Plays audio from a <code>Track</code> object.","Exclusively plays audio from a <code>Track</code> object.","Plays audio from a source, returning a handle for further …","Plays audio from a source, returning a handle for further …","","Returns a reference to this driver’s built-in queue.","Removes all global event handlers from an audio context.","Configuration for connection retries.","Sets the bitrate for encoding Opus packets sent along the …","Sets the configuration for this driver (and parent <code>Call</code>, …","Returns whether this mode will decrypt received packets.","Stops playing audio from all sources, if any are set.","","","","","Returns the name of a mode as it will appear during …","","","","","","","","","","","","","","","","","","","","","","","Exponential backoff waiting strategy, where the duration …","The driver will wait for the same amount of time between …","Exponential backoff waiting strategy.","Configuration to be used for retrying driver connection …","Logic used to determine how long to wait between retry …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Amount of uniform random jitter to apply to generated wait …","Maximum amount of time to wait between retries.","Minimum amount of time to wait between retries.","The maximum number of retries to attempt.","Strategy used to determine how long to wait between retry …","","","","","","","","","","","","","","","","The driver hung up an internal signaller, either due to …","Errors encountered while connecting to a Discord voice …","Convenience type for Discord voice/driver connection error …","An error occurred during [en/de]cryption of voice packets …","Server did not return the expected crypto mode during …","Selected crypto mode was not offered by server.","The driver failed to establish a voice connection.","Request to join was dropped, cancelled, or replaced.","An indicator that an endpoint URL was invalid.","Discord hello/ready handshake was violated.","The operation failed because the track has ended, has been …","The given channel ID was zero.","Discord failed to correctly respond to IP discovery.","The given guild ID was zero.","Could not parse Discord’s view of our IP.","Failed to message other background tasks after connection …","The supplied event listener can never be fired by a track, …","Miscellaneous I/O error.","Error returned when a manager or call handler is unable to …","Convenience type for Discord gateway error handling.","JSON (de)serialization error.","Tried to leave a <code>Call</code> which was not found.","No available gateway connection was provided to send voice …","The track’s underlying <code>Input</code> doesn’t support seeking …","Serenity-specific WebSocket send error.","Connection attempt timed out.","Connection details were not received from Discord in the …","Errors associated with control and manipulation of tracks.","Alias for most calls to a <code>TrackHandle</code>.","Twilight-specific WebSocket send error returned when using …","Twilight-specific WebSocket send error when explicitly …","Error communicating with gateway server over WebSocket.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Indicates whether this failure may have left (or been …","Indicates whether this failure can be reattempted via …","","","","","","","","","","","","","","","","","","","Cancels the event, if it was intended to persist.","Fired whenever a client disconnects.","Fires whenever a user disconnects from the same stream as …","Untimed events belonging to the global context, such as …","Core events","Voice core events occur on receipt of voice packets and …","Delayed events rely upon a <em>delay</em> parameter, and fire one …","Fires when this driver successfully connects to a voice …","Fires when this driver successfully connects to a voice …","Fires when this driver fails to connect to, or drops from, …","Fires when this driver fails to connect to, or drops from, …","Fires when this driver successfully reconnects after a …","Fires when this driver successfully reconnects after a …","The attached track has ended.","Classes of event which may occur, triggering a handler at …","Information about which tracks or data fired an event.","Internal representation of an event, as handled by the …","Trait to handle an event which can be fired per-track, or …","Storage for <code>EventData</code>, designed to be used for both local …","The attached track has looped.","The attached track has been paused.","Periodic events rely upon two parameters: a <em>period</em> and an …","The attached track has resumed playing.","Telemetry/statistics packet, received from another stream.","Fires on receipt of an RTCP packet, containing various …","Speaking state update, typically describing how another …","Speaking state update, typically describing how another …","Speaking state transition, describing whether a given …","Fires when a source starts speaking, or stops speaking (…","Track event context, passed to events created via …","Untimed events belonging to a track, such as state …","Track events correspond to certain actions or changes of …","Track events correspond to certain actions or changes of …","Track and voice core events.","Opus audio packet, received from another stream.","Fires on receipt of a voice packet from another stream in …","Respond to one received event.","Add an event to this store.","","","","","","","","","","","","","","","","","","","","","","","","Computes the next firing time for a timer event.","Types containing the main body of an <code>EventContext</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Create a representation of an event and its associated …","Creates a new event store to be used globally.","Creates a new event store to be used within a <code>Track</code>.","","Retreive the event class for an event (i.e., when matching)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This (re)connection attempt was dropped due to another …","The voice driver failed to connect to the server.","Voice connection details gathered at setup/reinstantiation.","Voice connection details gathered at termination or …","The location that a voice connection was terminated.","The reason that a voice connection failed.","Songbird had an internal error.","A host-specific I/O error caused the fault; this is likely …","Songbird and Discord disagreed on the protocol used to …","The voice driver failed to reconnect to the server.","Telemetry/statistics packet, received from another stream …","The voice connection was terminated mid-session by either …","Speaking state transition, describing whether a given …","A voice connection was not established in the specified …","Opus audio packet, received from another stream (detailed …","The Websocket connection was closed by Discord.","Decoded audio from this packet.","","","","","","","","","","","","","","","ID of the voice channel being joined, if it is known.","ID of the voice channel being joined, if it is known.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","ID of the target voice channel’s parent guild.","ID of the target voice channel’s parent guild.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","The location that a voice connection was terminated.","Raw RTCP packet data.","Raw RTP packet data.","Number of bytes at the end of the packet to discard.","Number of bytes at the end of the packet to discard.","Byte index into the packet body (after headers) for where …","Byte index into the packet body (after headers) for where …","The cause of any connection failure.","The domain name of Discord’s voice/TURN server.","Unique string describing this session for …","Unique string describing this session for …","Whether this user is currently speaking.","The RTP SSRC <em>(“Synchronisation source”)</em> assigned by …","Synchronisation Source of the user who has begun speaking.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ID of a Discord voice/text channel.","ID of a Discord guild (colloquially, “server”).","ID of a Discord user.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Handle for a child process which ensures that any …","","","Marker and state for decoding framed input files.","Framed input, beginning with a JSON header.","Information used in audio frame detection.","Data and metadata needed to correctly parse a <code>Reader</code>’s …","Information about an <code>Input</code> source.","Raw, unframed input.","","","The main artist of this stream.","","","","","","","","","","","In-memory, shared input sources for reuse between calls, …","The YouTube channel of this stream.","The number of audio channels in this stream.","Create a <code>Reader</code> from a child process","","","","","","","Decoding schemes for input audio bytestreams.","Framing strategy needed to identify frames of compressed …","The date of creation of this stream.","Creates a streamed audio source from a DCA file. Currently …","","","The reported duration of this stream.","","","Errors caused by input creation.","Opens an audio file through <code>ffmpeg</code> and creates an audio …","Opens an audio file through <code>ffmpeg</code> and creates an audio …","Creates a floating-point PCM Input from a given reader.","","","","","","Payload length, in bytes.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Extract metadata and details from the output of <code>ffprobe</code>.","Use <code>youtube-dl</code>’s JSON output for metadata for an online …","Returns the type of the inner <code>Codec</code>.","Length of this frame’s header, in bytes.","Returns the byte index of the first frame containing audio …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns whether the inner <code>Reader</code> implements <code>Seek</code>.","Returns whether the read audio signal is stereo (or mono).","Decoder used to parse the output of <code>reader</code>.","Information about the played source.","Mixes the output of this stream into a 20ms stereo audio …","Create a new <code>ChildContainer</code> from a child process","Creates a new Input using (at least) the given reader, …","Tries to read the header of the next frame from an input …","","","Raw handlers for input bytestreams.","Underlying audio data bytestream.","A source which supports seeking by recreating its input …","The sample rate of this stream.","","Seeks the stream to the given time, if possible.","","","The source url of this stream.","The time at which the first true sample is played back.","Indicates whether <code>source</code> is stereo or mono.","Move all fields from a <code>Metadata</code> object into a new one.","The thumbnail url of this stream.","The YouTube title of this stream.","","","","The track of this stream.","","","","","","","","","","","","Tries to seek on an input directly using sample length, if …","","","","","","Utility methods for seeking or decoding.","","","","","","Creates a streamed audio source with <code>youtube-dl</code> and <code>ffmpeg</code>.","Creates a streamed audio source from YouTube search …","Byte index of the first frame after the JSON header.","Estimate of a source’s length in bytes.","A wrapper around an existing <code>Input</code> which compresses the …","Expected amount of time that an input should last.","A wrapper around an existing <code>Input</code> which caches the …","Transform applied inside <code>Compressed</code>, converting a …","Estimate of a source’s length in time.","Modify the given cache configuration to initially allocate …","","","","","","","","","","","","","","","Estimates the cost, in B/s, of audio data compressed at …","Framing mechanism for the inner bytestore.","Provides the default config used by a cached source.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Codec used to read the inner bytestore.","Metadata moved out of the captured source.","Metadata moved out of the captured source.","","Wrap an existing <code>Input</code> with an in-memory store, compressed …","Wrap an existing <code>Input</code> with an in-memory store with the …","Acquire a new handle to this object, creating a new view …","Acquire a new handle to this object, creating a new view …","Inner shared bytestore.","Inner shared bytestore.","Calculates the cost, in B/s, of raw floating-point audio …","","Stereo-ness of the captured source.","Stereo-ness of the captured source.","","","","","","","","","","","","","","","","","","","","","Wrap an existing <code>Input</code> with an in-memory store, compressed …","Wrap an existing <code>Input</code> with an in-memory store with the …","Wrap an existing <code>Input</code> with an in-memory store, compressed …","State used to decode input bytes of an <code>Input</code>.","Type of data being passed into an <code>Input</code>.","The inner bytestream is encoded using raw <code>f32</code> samples.","The inner bytestream is encoded using raw <code>f32</code> samples.","The inner bytestream is encoded using the Opus codec, to …","The inner bytestream is encoded using the Opus codec.","Inner state used to decode Opus input sources.","The inner bytestream is encoded using raw <code>i16</code> samples.","The inner bytestream is encoded using raw <code>i16</code> samples.","Controls whether this source allows direct Opus frame …","","","","","","","","","","","","","Inner decoder used to convert opus frames into a stream of …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Creates a new decoder pre-configured by the user.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Creates a new decoder, having stereo output at 48kHz.","Returns the length of a single output sample, in bytes.","","","","","","","","","","","","","","","","","An error occurred while opening a new DCA source.","An error returned from the <code>dca</code> method.","An error returned when creating a new <code>Input</code>.","The file opened did not have a valid DCA JSON header.","The file’s metadata block was invalid, or could not be …","The file’s header reported an invalid metadata block …","An error occurred while reading, or opening a file.","An error occurred while reading, or opening a file.","An error occurred while parsing JSON (i.e., during …","Failed to extract metadata from alternate pipe.","An error occurred within the Opus codec.","An error was encountered while creating a new Opus decoder.","Convenience type for fallible return of <code>Input</code>s.","Apparently failed to create stdout.","Configuration error for a cached Input.","An error occurred while checking if a path is stereo.","An error occurred while processing the JSON output from …","An error occurred while running <code>youtube-dl</code>.","The <code>url</code> field of the <code>youtube-dl</code> JSON output was not …","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Json error","Text that failed to be parsed","A cached, Opus-compressed in-memory store, provided by …","A basic user-provided source.","<code>MediaSource</code> is a composite trait of <code>std::io::Read</code> and …","A cached, raw in-memory store, provided by Songbird.","Piped output of another program (i.e., <code>ffmpeg</code>).","Usable data/byte sources for an audio stream.","A source which supports seeking by recreating its inout …","","","Returns the length in bytes, if available. This may be an …","","","","Returns the argument unchanged.","","A source contained in a local file.","A source contained as an array in memory.","Calls <code>U::from(self)</code>.","","Returns if the source is seekable. This may be an …","Returns whether the given source implements <code>Seek</code>.","","","","","","","","Trait used to create an instance of a <code>Reader</code> at …","A wrapper around a method to create a new <code>Input</code> which …","","","Tries to create a replacement source.","Create a new restartable ffmpeg source for a local file.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Optionally retrieve metadata for a source which has been …","Create a new source, which can be restarted using a …","","","","","","","","Create a new restartable ytdl source.","Create a new restartable ytdl source, using the first …","Calculates the time position in a FloatPCM stream from a …","Create an Opus decoder outputting at a sample rate of …","Calculates the time position in a FloatPCM stream from a …","Calculates the byte position in a FloatPCM stream from a …","Calculates the sample position in a FloatPCM stream from a …","Future for a call to <code>Call::join</code>.","Future for a call to <code>Call::join_gateway</code>.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Helper trait to add installation/creation methods to …","Zero-size type used to retrieve the registered <code>Songbird</code> …","","","Returns the argument unchanged.","Retrieve the Songbird voice client from a serenity context…","Calls <code>U::from(self)</code>.","","Installs a new songbird instance into the serenity client.","Installs a given songbird instance into the serenity …","Registers a new Songbird voice system with serenity, …","Registers a Songbird voice system serenity, based on the …","Registers a given Songbird voice system with serenity, as …","Installs a given songbird instance into the serenity …","","","","","A generic shard handle source.","Handle to a generic shard instance.","Trait for a generic shard cluster or other handle source.","Serenity-specific wrapper for sharder state initialised by …","Handle to one of serenity’s shard runners.","Handle to an individual shard designed to buffer unsent …","Serenity-specific wrapper for sharder state initialised by …","A reference to an individual websocket connection.","Source of individual shard connection handles.","Twilight-specific wrapper for sharder state initialised by …","Handle to a twilight shard spawned from a cluster.","Twilight-specific wrapper for a single shard initialised …","Handle to a twilight shard spawned from a cluster.","Trait for a generic shard handle to send voice state …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get access to a new shard","Returns a new handle to the required inner shard.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Send a voice update message to the inner shard handle.","","","","","","Register an event on this track.","Run some closure on this track, with direct access to the …","The track has naturally ended, and cannot be restarted.","The operation failed because the track has ended, has been …","Track will loop <code>n</code> more times.","Track will loop endlessly until loop state is changed or …","The supplied event listener can never be fired by a track, …","Change the loop count/strategy of this track.","Looping behaviour for a <code>Track</code>.","Prompts a track’s input to become live and usable, if it …","Set the track’s play_mode to pause.","The track is currently paused, and may be resumed.","Set the track’s play_mode to play/resume.","The track is currently playing.","Playback status of a track.","Reference to a track which is known to be part of a queue.","Request a copy of this track’s state.","Seek to the given duration.","The track’s underlying <code>Input</code> doesn’t support seeking …","Stop the target track. This cannot be undone.","The track has been manually stopped, and cannot be …","Control object for audio playback.","A request from external code using a <code>TrackHandle</code> to modify …","Errors associated with control and manipulation of tracks.","Handle for safe control of a <code>Track</code> from other threads, …","A simple queue for several audio sources, designed to play …","Alias for most calls to a <code>TrackHandle</code>.","State of an <code>Track</code> object, designed to be passed to event …","Set the track’s volume.","Perform an arbitrary synchronous action on a raw <code>Track</code> …","Adds a <code>Track</code> object to the queue, to be played in the …","Attach an event handler to an audio track. These will …","Adds an audio source to the queue, to be played in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Track</code> object to pass into the audio context, and …","Creates a <code>Track</code> and <code>TrackHandle</code> as in <code>create_player</code>, …","Returns a handle to the currently playing track.","Returns a list of currently queued tracks.","","","","","Attempts to remove a track from the specified index.","","Set an audio track to no longer loop.","Set an audio track to loop indefinitely.","","","","","","List of events attached to this audio track.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Request playback information and state from the audio …","Clones the inner handle","Handle for safe control of this audio track from other …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns whether the track has irreversibly stopped.","Returns whether there are no tracks currently in the queue.","Denotes whether the underlying <code>Input</code> stream is compatible …","Returns the number of tracks currently in the queue.","Set an audio track to loop a set number of times.","Remaining loops on this track.","Count of remaining loops.","Ready a track for playing if it is lazily initialised.","Ready a track for playing if it is lazily initialised.","Returns the metadata stored in the handle.","Allows modification of the inner queue (i.e., deletion, …","Creates a new handle, using the given command sink and …","Create a new, empty, track queue.","Create a new track directly from an input, command source, …","Pauses an audio track.","Pause the track at the head of the queue.","Pauses a track if it is playing.","Unpauses an audio track.","Sets a track to playing if it is paused.","Returns the total length of time this track has been …","Total playback time, increasing monotonically.","Returns the current play status of this track.","Play status (e.g., active, paused, stopped) of this track.","Returns the current playback position.","Current playback position in the source.","Resume the track at the head of the queue.","Seeks along the track to the specified position.","Seek to a specific point in the track.","Send a raw command to the <code>Track</code> object.","Set an audio track to loop a set number of times.","Sets the volume of an audio track.","Sets <code>volume</code> in a manner that allows method chaining.","Skip to the next track in the queue, if it exists.","Creates a read-only copy of the audio track’s state.","Stops an audio track.","Stop the currently playing track, and clears the queue.","Manually stops a track.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allows access to this track’s attached TypeMap.","Returns this handle’s (and track’s) unique identifier.","Returns this track’s unique identifier.","Returns the current volume.","Current volume of this track.","","","","","","","",""],"i":[0,72,75,0,0,0,0,72,75,72,75,72,75,76,0,0,0,76,76,76,72,75,0,72,75,72,75,72,0,72,75,1,2,3,10,1,2,3,10,3,1,2,3,1,2,3,0,0,1,1,2,2,2,1,1,1,2,2,10,0,1,1,1,1,3,3,3,0,0,0,1,2,3,10,1,2,3,10,2,1,1,10,10,3,3,0,10,10,0,1,2,3,10,1,2,3,10,2,2,0,2,10,2,10,2,10,0,2,2,0,1,1,10,10,10,0,10,10,10,3,10,0,2,2,10,1,2,3,3,0,1,2,3,10,1,2,3,10,10,10,1,2,3,10,0,2,2,3,1,2,3,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,46,0,0,9,0,9,0,4,46,4,9,4,43,46,47,4,9,43,46,47,4,9,43,46,4,9,43,46,4,9,43,43,43,43,43,4,43,43,46,4,9,46,4,9,46,4,9,43,46,47,4,9,43,46,46,47,4,9,43,47,46,47,4,9,43,43,43,43,43,4,0,4,4,4,43,43,43,43,47,43,43,0,43,43,9,43,46,4,9,43,4,46,46,47,4,9,43,46,47,4,9,43,47,46,47,4,9,43,46,47,4,9,43,58,58,0,0,0,58,59,15,58,59,15,58,59,15,58,59,15,59,15,58,59,15,58,59,15,58,59,15,58,59,15,58,59,15,59,59,59,15,15,58,59,15,58,59,15,58,59,15,58,59,15,58,59,15,61,0,0,61,61,61,62,62,61,61,60,62,61,62,61,61,60,61,0,0,61,62,62,60,62,61,62,0,0,62,62,61,61,62,60,61,62,60,60,60,60,60,61,61,62,62,60,60,61,61,61,61,61,61,61,61,62,62,62,62,62,60,61,62,60,61,62,60,61,62,60,62,62,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,61,62,60,44,72,75,77,44,0,44,72,75,72,75,72,75,76,0,0,0,0,0,76,76,44,76,72,75,72,75,72,75,72,77,44,0,0,72,75,45,73,74,72,75,73,76,77,44,74,72,75,73,76,77,44,75,76,77,44,75,76,77,44,74,74,0,73,74,75,76,77,44,74,75,76,77,44,74,72,75,73,76,77,44,74,72,75,73,76,77,77,77,44,44,44,75,76,77,44,74,72,75,73,76,77,44,74,72,75,73,76,77,44,74,73,73,74,72,75,76,77,44,74,72,75,73,76,77,44,74,72,75,73,76,77,44,74,72,75,73,76,77,44,74,72,75,73,76,77,44,81,80,0,0,0,0,81,81,81,80,0,80,0,81,0,81,84,79,85,80,81,82,83,84,79,85,80,81,82,83,84,79,85,79,80,81,82,83,84,79,80,81,82,83,84,79,80,81,82,83,84,79,80,81,82,83,84,79,85,80,81,82,83,84,79,85,80,81,81,82,83,84,79,85,79,80,83,79,85,80,81,82,83,84,79,85,80,81,82,83,84,85,82,84,82,84,82,84,85,79,79,85,83,79,83,79,80,81,82,83,84,79,85,80,81,82,83,84,79,85,80,81,82,83,84,79,85,80,81,82,83,84,79,85,80,81,82,83,84,0,0,0,5,24,29,5,24,29,5,24,29,5,24,29,5,24,29,5,24,29,5,24,29,5,5,24,24,29,29,5,5,5,5,24,24,24,24,29,29,29,29,5,24,29,5,24,29,5,24,29,5,24,29,5,24,29,5,24,29,5,24,29,5,24,29,5,24,29,0,0,0,0,95,0,0,0,95,0,0,96,98,94,95,96,19,98,94,95,96,19,0,96,96,0,94,95,96,94,95,96,0,19,96,0,96,98,96,96,96,0,0,0,19,98,94,95,96,19,94,98,94,95,96,19,19,19,96,96,19,94,95,98,94,95,96,19,98,94,95,96,19,19,19,19,19,19,98,19,95,98,19,0,19,0,96,19,19,98,19,96,96,19,96,96,96,94,95,96,96,98,94,95,96,19,19,98,94,95,96,19,95,98,94,95,96,19,0,98,94,95,96,19,0,0,141,110,0,0,0,0,110,0,99,111,110,108,99,111,110,108,99,110,108,99,110,108,0,108,0,99,111,110,108,99,111,110,110,110,108,99,111,110,108,99,111,110,108,108,99,108,111,99,108,99,108,99,108,0,111,99,108,99,110,108,111,99,111,110,108,99,111,110,108,99,111,110,108,99,111,110,108,99,108,99,0,0,104,102,104,102,0,104,102,114,114,104,102,114,104,102,114,104,102,114,104,102,114,114,104,102,114,104,102,102,114,114,104,102,114,104,102,114,102,114,104,102,114,104,104,102,114,104,102,114,104,102,114,104,102,116,0,0,97,97,97,116,97,116,116,116,97,0,116,116,116,116,116,116,116,97,116,97,116,116,97,97,116,116,116,116,116,97,116,97,116,97,116,97,116,97,116,97,116,97,116,97,116,97,116,97,142,142,93,93,0,93,93,0,93,93,93,143,93,93,93,93,93,93,93,93,93,143,93,93,93,93,93,93,93,93,0,0,100,100,123,100,100,100,100,100,123,100,100,100,100,100,100,100,100,100,100,0,0,0,0,0,0,0,30,31,30,31,30,31,30,31,30,31,30,31,30,31,30,31,30,31,30,31,30,31,30,31,0,0,144,144,144,0,144,144,0,0,145,145,145,0,144,144,144,144,129,23,0,129,23,0,0,0,0,129,23,129,23,0,129,127,23,128,129,127,23,128,23,23,127,128,129,127,23,128,129,127,23,128,146,129,129,127,23,128,129,127,23,128,23,129,127,23,128,129,127,23,128,129,127,23,128,130,23,129,127,23,128,137,137,133,60,132,132,60,137,0,137,137,133,137,133,0,0,137,137,60,137,133,0,0,0,0,0,0,0,137,51,55,51,55,137,51,132,133,55,136,134,50,137,51,132,133,55,136,134,50,51,132,133,55,134,51,132,133,55,134,0,0,55,55,132,133,55,134,55,136,51,51,132,133,134,132,133,50,137,51,132,133,55,136,134,50,137,51,132,133,55,136,134,50,51,136,50,137,51,132,133,55,136,134,50,137,51,132,133,55,136,134,50,133,55,51,55,51,134,50,51,50,51,55,51,55,50,51,55,50,51,50,50,134,50,134,50,134,55,51,50,51,50,51,50,55,50,51,55,50,51,132,133,55,134,137,51,132,133,55,136,134,50,137,51,132,133,55,136,134,50,137,51,132,133,55,136,134,50,51,51,50,50,134,137,51,132,133,55,136,134,50],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,1],[2,2],[3,3],[[]],[[]],[[]],0,0,[[1,4],1],0,[2,[[6,[5]]]],[2,[[6,[3]]]],[[2,7],8],[[1,9],1],0,[[],1],[2],[2],[[10,11],[[14,[[13,[12]]]]]],0,[[1,15],1],0,[[1,[6,[16]]],1],0,0,[[3,3],7],[[],7],0,0,[[[18,[17]]],[[20,[19]]]],[[1,21],22],[[2,21],22],[[3,21],22],[[10,21],22],[[]],[[]],[[]],[[]],[[23,1],2],[[1,[6,[16]]],1],0,[[10,[25,[24]]],[[6,[[27,[[26,[2]]]]]]]],[10,[[27,[[26,[2]]]]]],0,[3],0,[[10,11,28],[[14,[[13,[12]]]]]],[[10,11,[25,[29]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,7],[2,7],0,[2,[[8,[30]]]],[10],[2,[[8,[31]]]],[10],[2,8],[[10,[25,[24]]],8],0,[[2,7],8],[23,2],0,[[1,32],1],0,[[10,33]],[[10,11,[35,[34]]],[[14,[[13,[12]]]]]],[[10,[25,[24]]],8],0,[[],[[27,[10]]]],[1,[[27,[10]]]],[[10,36,6,37],[[14,[[13,[12]]]]]],0,[[10,1]],0,[[],2],[1,2],[[10,36,38],[[14,[[13,[12]]]]]],[[]],[[]],[[]],0,0,[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[[27,[40]]],10],[[[27,[40]],1],10],[[],41],[[],41],[[],41],[[],41],0,[[2,42,42]],[[2,42,6]],0,[[]],[[]],[[]],[[]],[[[18,[37]]],[[20,[19]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[43,44,45]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[46,46],[4,4],[9,9],[43,43],[[]],[[]],[[]],[[]],[43,1],[[43,3],47],[[],43],[43],[[4,48,32],[[39,[49]]]],[[43,50]],[[43,19],51],[[46,46],7],[[4,4],7],[[9,9],7],[[],7],[[],7],[[],7],[[46,21],[[39,[52]]]],[[4,21],22],[[9,21],22],[[43,21],22],[[]],[[]],[[]],[[]],[[]],[46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,7],[43],[[43,7]],[1,43],[4,32],0,[4,32],[4,32],[4,32],[[43,50]],[[43,50]],[[43,19],51],[[43,19],51],[[[14,[47]],53],54],[43,55],[43],0,[[43,46]],[[43,1]],[9,7],[43],[[]],[[]],[[]],[[]],[4,37],[[],39],[56,[[39,[46,57]]]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[14,53],54],[[],41],[[],41],[[],41],[[],41],[[],41],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[58,58],[59,59],[15,15],[[]],[[]],[[]],[[],59],[[],15],[[58,58],7],[[59,59],7],[[15,15],7],[[58,21],22],[[59,21],22],[[15,21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],41],[[],41],[[],41],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[60,60],[[]],[[60,60],7],[[],7],[[61,21],22],[[61,21],22],[[62,21],22],[[62,21],22],[[60,21],22],[[60,21],22],[[]],[49,61],[[[63,[0]]],61],[64,61],[[[63,[0]]],61],[[[63,[0]]],61],[65,61],[66,61],[[]],[61,62],[67,62],[[[68,[34]]],62],[69,62],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[70],[70],[70],[62,7],[62,7],[61,[[6,[71]]]],[62,[[6,[71]]]],[[]],[[],42],[[],42],[[],42],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],41],[[],41],[[],41],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[72,[[14,[[13,[12]]]]]],[[73,74,16]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75,75],[76,76],[77,77],[44,44],[[]],[[]],[[]],[[]],[[74,74],78],[[74,16]],0,[[],73],[[74,74],7],[[75,75],7],[[76,76],7],[[77,77],7],[[44,44],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[74,21],[[39,[52]]]],[[72,21],22],[[75,21],22],[[73,21],22],[[76,21],22],[[77,21],22],[[44,21],22],[[]],[[]],[[]],[[]],[[]],[[]],[76,77],[75,77],[[]],[76,44],[75,44],[75],[76],[77],[44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[44,45],74],[[],73],[[],73],[[74,74],[[6,[78]]]],[72,[[6,[75]]]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[[]],[[]],[[]],[[]],[[]],[[]],[[79,79],7],[[80,80],7],[[81,81],7],[[82,82],7],[[83,83],7],[[84,84],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[79,21],22],[[85,21],22],[[80,21],22],[[81,21],22],[[82,21],22],[[83,21],22],[[84,21],22],[[]],[[]],[[]],[[]],[61,81],[[]],[[]],[[]],0,0,[79],[80],[83],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[24,24],[29,29],[[]],[[]],[[]],[[],5],[[],24],[[],29],[[5,5],7],[[24,24],7],[[29,29],7],[[],7],[[],7],[[],7],[[5,21],22],[[5,21],22],[[24,21],22],[[24,21],22],[[29,21],22],[[29,21],22],[86,5],[[]],[11,5],[[[88,[87]]],5],[[]],[11,24],[36,24],[[[88,[89]]],24],[[[88,[90]]],29],[28,29],[[]],[11,29],[5],[24],[29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],42],[[],42],[[],42],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],41],[[],41],[[],41],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[92,[91]]],93],[94,94],[95,95],[96,96],[[]],[[]],[[]],0,0,0,[[[18,[17]]],[[39,[19,97]]]],[[],96],[98],0,[[96,96],7],[[],7],0,[[[18,[17]]],[[20,[19]]]],[[[18,[17]]],[[20,[19]]]],[[7,93],19],[[98,21],22],[[94,21],22],[[95,21],22],[[96,21],22],[[19,21],22],0,[[]],[[]],[[]],[[]],[99,19],[100,19],[[]],[101,96],[101,96],[19,102],0,[95,32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,7],[19,7],0,0,[[19,103],32],[[[92,[91]]],98],[[7,93,104,95,[6,[96]]],19],[[95,105,102],[[106,[94]]]],[98,[[106,[32]]]],[19,[[106,[32]]]],0,0,0,0,[[19,107],[[106,[11]]]],[[19,16],[[6,[16]]]],[32,32],[32,32],0,0,0,[96,96],0,0,[[]],[[]],[[]],0,[[],39],[[],39],[[],39],[[],39],[108,[[20,[19]]]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[95,102],[[6,[32]]]],[[],41],[[],41],[[],41],[[],41],[[],41],0,[[]],[[]],[[]],[[]],[[]],[[[18,[37]]],[[20,[19]]]],[[[18,[37]]],[[20,[19]]]],0,0,0,0,0,0,0,[[109,32]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[99,99],[110,110],[108,108],[[]],[[]],[[]],[46,32],0,[32,109],[[99,21],22],[[111,21],22],[[110,21],22],[[108,21],22],[[]],[[]],[[]],[32,110],[16,110],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[111,32],[[19,46],[[20,[99]]]],[19,[[20,[108]]]],[99,99],[108,108],0,0,[7,32],[111],0,0,[[]],[[]],[[]],[111,[[106,[112]]]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],41],[[],41],[[],41],[[],41],[[]],[[]],[[]],[[]],[[19,46,[6,[109]]],[[20,[99]]]],[[19,[6,[109]]],[[20,[108]]]],[[19,113,[6,[109]]],[[20,[99]]]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[114,114],[104,104],[102,102],[[]],[[]],[[]],0,[[114,21],22],[[104,21],22],[[102,21],22],[[]],[[]],[[]],[104,102],[115,114],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[39,[114,57]]]],[102,32],[[]],[[]],[[]],[[],39],[[],39],[102,[[20,[104]]]],[[],39],[[],39],[[],39],[[],39],[[],41],[[],41],[[],41],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[116,21],22],[[116,21],22],[[97,21],22],[[97,21],22],[117,116],[[]],[57,116],[97,116],[64,116],[[]],[[]],[[]],[[]],[[]],[70],[70],[116,[[6,[71]]]],[97,[[6,[71]]]],[[],42],[[],42],[[],39],[[],39],[[],39],[[],39],[[],41],[[],41],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[],[[6,[11]]]],[[93,21],[[39,[52]]]],[91,93],[[[92,[91]]],93],[[]],[[[92,[118]]],93],[119,93],[[[92,[118]]],93],[[]],[[]],[[],7],[93,7],[93,[[106,[32]]]],[[93,107],[[106,[11]]]],[32,32],[[],39],[[],39],[[],41],[[]],0,0,[[]],[[]],[[[6,[16]]],[[14,[[13,[12]]]]]],[[[0,[[18,[17]],120,121,122]],7],[[20,[100]]]],[[100,21],22],[[]],[[]],[[]],[[],[[14,[[13,[12]]]]]],[[[0,[123,120]],7],[[20,[100]]]],[100,[[106,[32]]]],[[100,107],[[106,[11]]]],[32,32],[[],39],[[],39],[[],41],[[]],[[[0,[[18,[37]],120,121,122]],7],[[20,[100]]]],[[[18,[37]],7],[[20,[100]]]],[[32,7],16],[7,[[124,[115]]]],[[32,7],16],[[16,7],32],[[16,7],32],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[30]],53],54],[[[14,[31]],53],54],[[],39],[[],39],[[],39],[[],39],[[14,53],54],[[14,53],54],[[],41],[[],41],[[]],[[]],0,0,[[]],[[]],[[]],[125,[[6,[[27,[10]]]]]],[[]],[[]],[126,126],[[126,1],126],[[]],[1],[[[27,[10]]]],[[126,[27,[10]]],126],[[],39],[[],39],[[],41],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,23],[[]],[[],127],[[],128],[[129,21],22],[[127,21],22],[[23,21],22],[[128,21],22],[[]],[[]],[[]],[[]],[11,[[6,[[27,[130]]]]]],[[129,11],[[6,[23]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],41],[[],41],[[],41],[[],41],[[24,[6,[5]],7,7],[[14,[[13,[12]]]]]],[[23,24,[6,[5]],7,7],[[14,[[13,[12]]]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[51,131],[[55,50,43]],[[51,44,45],131],[[55,19,43],51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[51,51],[132,132],[133,133],[55,55],[134,134],[[]],[[]],[[]],[[]],[[]],[19],[[19,135]],[55,[[6,[51]]]],[55,[[92,[51]]]],[[],132],[[],133],[[],55],[[],134],[[55,32],[[6,[136]]]],[136],[51,131],[51,131],[[132,132],7],[[133,133],7],[[134,134],7],[[],7],[[],7],0,[[137,21],[[39,[52]]]],[[51,21],22],[[132,21],22],[[133,21],22],[[55,21],22],[[136,21],22],[[134,21],22],[[50,21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[51,[[131,[134]]]],[136,51],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[133,7],[55,7],[51,7],[55,32],[[51,32],131],0,0,[51,131],[50],[51,96],[55],[[[138,[137]],7,135,[13,[96]]],51],[[],55],[[19,[139,[137]],51],50],[51,131],[55,131],[50,50],[51,131],[50,50],[50,16],0,[50,133],0,[50,16],0,[55,131],[[51,16],131],[[50,16],[[131,[16]]]],[[51,137],131],[[50,132],131],[[51,103],131],[[50,103],50],[55,131],[50,134],[51,131],[55],[50,50],[[]],[[]],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[51,140],[51,135],[50,135],[50,103],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Config"],[3,"Call"],[3,"ConnectionInfo"],[4,"CryptoMode"],[3,"ChannelId"],[4,"Option"],[15,"bool"],[6,"JoinResult"],[4,"DecodeMode"],[3,"Songbird"],[15,"u64"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"Retry"],[3,"Duration"],[3,"OsStr"],[8,"AsRef"],[3,"Input"],[6,"Result"],[3,"Formatter"],[6,"Result"],[4,"Shard"],[3,"GuildId"],[8,"Into"],[3,"Mutex"],[3,"Arc"],[3,"UserId"],[3,"UserId"],[3,"Join"],[3,"JoinGateway"],[15,"usize"],[4,"Event"],[4,"InterMessage"],[3,"UnboundedSender"],[3,"GuildId"],[15,"str"],[3,"VoiceState"],[4,"Result"],[3,"Cluster"],[3,"TypeId"],[3,"String"],[3,"Driver"],[4,"Event"],[8,"EventHandler"],[4,"Bitrate"],[3,"Connect"],[3,"XSalsa20Poly1305"],[3,"Error"],[3,"Track"],[3,"TrackHandle"],[3,"Error"],[3,"Context"],[4,"Poll"],[3,"TrackQueue"],[15,"i32"],[4,"Error"],[4,"Strategy"],[3,"ExponentialBackoff"],[4,"TrackError"],[4,"ConnectionError"],[4,"JoinError"],[3,"SendError"],[3,"Error"],[3,"Error"],[3,"Elapsed"],[3,"ClusterCommandError"],[3,"TrySendError"],[3,"CommandError"],[3,"Demand"],[8,"Error"],[4,"EventContext"],[3,"EventStore"],[3,"EventData"],[4,"CoreEvent"],[4,"TrackEvent"],[4,"UntimedEvent"],[4,"Ordering"],[3,"ConnectData"],[4,"DisconnectKind"],[4,"DisconnectReason"],[3,"RtcpData"],[3,"SpeakingUpdateData"],[3,"VoiceData"],[3,"DisconnectData"],[3,"ChannelId"],[3,"ChannelMarker"],[3,"Id"],[3,"GuildMarker"],[3,"UserMarker"],[3,"Child"],[3,"Vec"],[4,"Reader"],[3,"Frame"],[4,"Container"],[3,"Metadata"],[4,"DcaError"],[3,"ChildContainer"],[3,"Compressed"],[3,"Restartable"],[4,"Value"],[4,"CodecType"],[15,"f32"],[4,"Codec"],[8,"Read"],[6,"Result"],[4,"SeekFrom"],[3,"Memory"],[3,"Config"],[4,"LengthHint"],[3,"OpusCompressor"],[4,"TransformPosition"],[3,"Encoder"],[3,"OpusDecoderState"],[3,"Decoder"],[4,"Error"],[4,"CatcherError"],[15,"u8"],[3,"File"],[8,"Send"],[8,"Clone"],[8,"Sync"],[8,"Restart"],[6,"Result"],[3,"Context"],[3,"ClientBuilder"],[3,"SerenitySharder"],[3,"SerenityShardHandle"],[4,"Sharder"],[8,"VoiceUpdate"],[6,"TrackResult"],[4,"LoopState"],[4,"PlayMode"],[3,"TrackState"],[3,"Uuid"],[3,"Queued"],[4,"TrackCommand"],[3,"Sender"],[3,"Receiver"],[3,"RwLock"],[13,"Dca"],[13,"Json"],[8,"MediaSource"],[3,"SongbirdKey"],[8,"SerenityInit"],[8,"GenericSharder"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
